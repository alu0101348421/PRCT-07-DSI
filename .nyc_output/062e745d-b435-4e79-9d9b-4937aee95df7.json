{"/home/usuario/Pruebas/src/RandomNumber.ts":{"path":"/home/usuario/Pruebas/src/RandomNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"3":{"start":{"line":22,"column":12},"end":{"line":22,"column":55}},"4":{"start":{"line":24,"column":8},"end":{"line":24,"column":37}},"5":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"6":{"start":{"line":40,"column":8},"end":{"line":40,"column":49}},"7":{"start":{"line":49,"column":8},"end":{"line":49,"column":65}},"8":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":21}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":25},"end":{"line":25,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":21},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":36},"end":{"line":41,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":34},"end":{"line":50,"column":5}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21}},"s":{"0":1,"1":1,"2":25,"3":1,"4":25,"5":2,"6":1,"7":22,"8":1},"f":{"0":1,"1":25,"2":2,"3":1,"4":22},"b":{"0":[1,24]},"inputSourceMap":{"version":3,"file":"/home/usuario/Pruebas/src/RandomNumber.ts","sources":["/home/usuario/Pruebas/src/RandomNumber.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACH,MAAa,YAAY;IAOvB;;;;OAIG;IACH,gBAAuB,CAAC;IACxB;;;;OAIG;IACI,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC1B,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;SAC5C;QACD,OAAO,YAAY,CAAC,QAAQ,CAAC;IAC/B,CAAC;IACD;;;OAGG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IACD;;;;;OAKG;IACI,qBAAqB,CAAC,GAAW,EAAE,GAAW;QACnD,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,CAAC;IACD;;;;;OAKG;IACI,mBAAmB,CAAC,GAAW,EAAE,GAAW;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3D,CAAC;CACF;AAjDD,oCAiDC","sourcesContent":["/**\n * Clase singleton que genera números aleatorios.\n * @class RandomNumber\n */\nexport class RandomNumber {\n  /**\n   * Instancia de la clase RandomNumber.\n   * @static\n   * @type {RandomNumber}\n   */\n  private static instance: RandomNumber;\n  /**\n   * Constructor privado de la clase RandomNumber.\n   * @constructor\n   * @private\n   */\n  private constructor() {}\n  /**\n   * Método estático que devuelve la instancia de la clase RandomNumber.\n   * @static\n   * @returns {RandomNumber}\n   */\n  public static getInstance(): RandomNumber {\n    if (!RandomNumber.instance) {\n      RandomNumber.instance = new RandomNumber();\n    }\n    return RandomNumber.instance;\n  }\n  /**\n   * Método que devuelve un número aleatorio en punto flotante entre 0 y 1.\n   * @returns {number}\n   */\n  public getRandomFloat(): number {\n    return Math.random();\n  }\n  /**\n   * Método que devuelve un número aleatorio en punto flotante entre n y m.\n   * @param min {number}\n   * @param max {number}\n   * @returns {number}\n   */\n  public getRandomFloatInRange(min: number, max: number): number {\n    return Math.random() * (max - min) + min;\n  }\n  /**\n   * Método que devuelve un número aleatorio entero entre n y m.\n   * @param min {number}\n   * @param max {number}\n   * @returns {number}\n   */\n  public getRandomIntInRange(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8f0a889876b31236cb052961dbf4f5ac85cdd86a","contentHash":"29dc464f4a1aa5947a79ffa48adadde6ce5c45f2aaed41dbb62e5fef95e4bbef"},"/home/usuario/Pruebas/src/RandomNumberSetCollection.ts":{"path":"/home/usuario/Pruebas/src/RandomNumberSetCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"4":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"5":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"6":{"start":{"line":18,"column":12},"end":{"line":18,"column":105}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":53}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":22},"end":{"line":20,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":24},"end":{"line":27,"column":5}},"line":25}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":20,"7":1,"8":1},"f":{"0":2,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/Pruebas/src/RandomNumberSetCollection.ts","sources":["/home/usuario/Pruebas/src/RandomNumberSetCollection.ts"],"names":[],"mappings":";;;AAAA,iDAA4C;AAE5C;;;;GAIG;AACH,MAAa,yBAAyB;IAOpC;;;OAGG;IACH,YAAY,IAAY;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAU,CAAC;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,2BAAY,CAAC,WAAW,EAAE,CAAC,mBAAmB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC/E;IACH,CAAC;IACD;;;OAGG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC/C,CAAC;CACF;AAxBD,8DAwBC","sourcesContent":["import {RandomNumber} from './RandomNumber';\n\n/**\n * Clase que utiliza un Set para almacenar números aleatorios.\n * @class RandomNumberSetCollection\n * @implements {Iterable<number>}\n */\nexport class RandomNumberSetCollection implements Iterable<number> {\n  /**\n   * Conjunto de números aleatorios.\n   * @type {Set<number>}\n   * @private\n   */\n  private randomNumbers: Set<number>;\n  /**\n   * Constructor de la clase RandomNumberSetCollection.\n   * @param size {number} Tamaño del conjunto.\n   */\n  constructor(size: number) {\n    this.randomNumbers = new Set<number>();\n    for (let i = 0; i < size; i++) {\n      this.randomNumbers.add(RandomNumber.getInstance().getRandomIntInRange(1, 10));\n    }\n  }\n  /**\n   * Método que devuelve un iterador sobre el conjunto de números aleatorios.\n   * @returns {Iterator<number>}\n   */\n  [Symbol.iterator](): Iterator<number> {\n    return this.randomNumbers[Symbol.iterator]();\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0821956ed644a82f174b878f6f7a29ba7c33377c","contentHash":"49c299985feba17dbf07cfbae99a49df84e05751f0695923f2e369f77e03855c"}}